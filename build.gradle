buildscript {
    repositories {
        gradlePluginPortal()
    }
    dependencies {
        classpath 'io.jmix.gradle:jmix-gradle-plugin:2.7.0-RC2'
    }
}

group = 'de.bytestore'
version = '2.7.0'

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'io.jmix'

    repositories {
        mavenCentral()
        maven {
            url = uri('https://nexus.jmix.io/repository/public')
        }
    }

    jmix {
        bomVersion = '2.7.0-RC2'
        projectId = 'plugin'
    }

    group = this.group
    version = this.version

    def archName = project.name

    tasks.withType(AbstractArchiveTask).configureEach {
        archiveBaseName.set(archName)
    }

    // WICHTIG: Groovy 4 durchsetzen und org.codehaus.groovy eliminieren
    configurations.configureEach {
        exclude group: "org.codehaus.groovy"

        resolutionStrategy {
            dependencySubstitution {
                substitute(module("org.codehaus.groovy:groovy")).using(module("org.apache.groovy:groovy:5.0.1"))
                substitute(module("org.codehaus.groovy:groovy-xml")).using(module("org.apache.groovy:groovy-xml:5.0.1"))
            }
        }
    }

    dependencies {
        // Groovy 4 BOM importieren und sicherstellen, dass groovy-xml aus org.apache.groovy kommt
        implementation platform("org.apache.groovy:groovy-bom:5.0.1")
        implementation "org.apache.groovy:groovy"
        implementation "org.apache.groovy:groovy-xml"

        api('org.pf4j:pf4j:3.13.0') {
            exclude group: 'org.slf4j', module: 'slf4j-reload4j'
        }
        api('org.pf4j:pf4j-spring:0.10.0') {
            exclude group: 'org.slf4j', module: 'slf4j-reload4j'
        }
    }

    java {
        withSourcesJar()
    }

    tasks.assemble {
        dependsOn jar, sourcesJar
    }

    publishing {
        repositories {
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/" + System.getenv("GITHUB_REPOSITORY"))
                credentials {
                    username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_USERNAME")
                    password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
                }
            }
        }
        publications {
            javaMaven(MavenPublication) {
                artifactId = archName
                from components.java
            }
        }
    }

    // remove after https://youtrack.jetbrains.com/issue/IDEA-227215 is fixed
    tasks.withType(GenerateModuleMetadata) {
        enabled = false
    }

    project.tasks.withType(JavaCompile).configureEach {
        options.compilerArgs.add("-parameters")
    }
}