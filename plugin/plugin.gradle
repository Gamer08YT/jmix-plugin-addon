apply plugin: 'groovy'
apply plugin: 'io.jmix'


tasks.withType(AbstractArchiveTask).configureEach {
    archiveBaseName.set('plugin')
}


// Apply Jmix plugin (Groovy plugin not needed unless you actually use .groovy source files)
apply plugin: "io.jmix"

tasks.withType(AbstractArchiveTask).configureEach {
    archiveBaseName.set("plugin")
}

dependencies {
    // --- Jmix starters ---
    implementation "io.jmix.core:jmix-core-starter"
    implementation "io.jmix.data:jmix-eclipselink-starter"
    implementation "io.jmix.flowui:jmix-flowui-starter"
    implementation "io.jmix.flowui:jmix-flowui-themes"

    // --- Testing ---
    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude group: "org.junit.vintage", module: "junit-vintage-engine"
    }
    testRuntimeOnly "org.junit.platform:junit-platform-launcher"
    testImplementation "org.springframework.boot:spring-boot-starter-web"
    testRuntimeOnly "org.hsqldb:hsqldb"

    // --- Logging ---
    implementation "org.slf4j:slf4j-api:2.0.16"
    implementation "ch.qos.logback:logback-classic:1.4.11"
    implementation "ch.qos.logback:logback-core:1.4.11"

    // --- PF4J core + Spring + update support ---
    implementation "org.pf4j:pf4j:3.13.0"
    implementation "org.pf4j:pf4j-spring:0.9.0"
    implementation "org.pf4j:pf4j-update:2.3.0"

    // --- Groovy XML (required for Jmix entity enhancement under Gradle 9+) ---
    implementation "org.codehaus.groovy:groovy-xml:3.0.21"
}

configurations.implementation {
    exclude group: 'com.vaadin', module: 'hilla'
    exclude group: 'com.vaadin', module: 'hilla-dev'
    exclude group: 'com.vaadin', module: 'copilot'
}

jar {
    // FÃ¼ge nur die Inhalte von org.pf4j hinzu
    from {
        configurations.runtimeClasspath.filter {
            it.name.contains('pf4j') || it.name.contains('semver')
        }.collect {
            zipTree(it)
        }
    }

    // Strategy verhindert Fehler durch doppelte Dateien
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}


test {
    useJUnitPlatform()
}
